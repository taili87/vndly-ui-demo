<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="4" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-11-19T12:17:24 EST" name="Suite" finished-at="2020-11-19T12:17:43 EST" duration-ms="18714">
    <groups>
    </groups>
    <test started-at="2020-11-19T12:17:24 EST" name="Functional-chrome" finished-at="2020-11-19T12:17:34 EST" duration-ms="9473">
      <class name="com.vndly.testCases.TC001_Student_RegistrationForm">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:com.vndly.testCases.TC001_Student_RegistrationForm@65b3f4a4]" started-at="2020-11-19T12:17:24 EST" name="beforeClass" finished-at="2020-11-19T12:17:32 EST" duration-ms="7822" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="TC_fill_Student_RegistrationForm()[pri:1, instance:com.vndly.testCases.TC001_Student_RegistrationForm@65b3f4a4]" started-at="2020-11-19T12:17:32 EST" name="TC_fill_Student_RegistrationForm" finished-at="2020-11-19T12:17:33 EST" duration-ms="484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_fill_Student_RegistrationForm -->
        <test-method signature="validateText()[pri:2, instance:com.vndly.testCases.TC001_Student_RegistrationForm@65b3f4a4]" started-at="2020-11-19T12:17:33 EST" name="validateText" finished-at="2020-11-19T12:17:33 EST" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateText -->
        <test-method signature="unValidedText_Capture_A_Screenshot()[pri:3, instance:com.vndly.testCases.TC001_Student_RegistrationForm@65b3f4a4]" started-at="2020-11-19T12:17:33 EST" name="unValidedText_Capture_A_Screenshot" finished-at="2020-11-19T12:17:33 EST" duration-ms="25" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Thanks for submitting the formA] but found [Thanks for submitting the form]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Thanks for submitting the formA] but found [Thanks for submitting the form]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.vndly.testCases.TC001_Student_RegistrationForm.unValidedText_Capture_A_Screenshot(TC001_Student_RegistrationForm.java:74)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unValidedText_Capture_A_Screenshot -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.vndly.testCases.TC001_Student_RegistrationForm@65b3f4a4]" started-at="2020-11-19T12:17:33 EST" name="afterClass" finished-at="2020-11-19T12:17:34 EST" duration-ms="673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.vndly.testCases.TC001_Student_RegistrationForm -->
    </test> <!-- Functional-chrome -->
    <test started-at="2020-11-19T12:17:34 EST" name="Functional-edge" finished-at="2020-11-19T12:17:43 EST" duration-ms="8949">
      <class name="com.vndly.testCases.TC001_Student_RegistrationForm">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:com.vndly.testCases.TC001_Student_RegistrationForm@61d6015a]" started-at="2020-11-19T12:17:34 EST" name="beforeClass" finished-at="2020-11-19T12:17:41 EST" duration-ms="7013" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="TC_fill_Student_RegistrationForm()[pri:1, instance:com.vndly.testCases.TC001_Student_RegistrationForm@61d6015a]" started-at="2020-11-19T12:17:41 EST" name="TC_fill_Student_RegistrationForm" finished-at="2020-11-19T12:17:42 EST" duration-ms="367" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_fill_Student_RegistrationForm -->
        <test-method signature="validateText()[pri:2, instance:com.vndly.testCases.TC001_Student_RegistrationForm@61d6015a]" started-at="2020-11-19T12:17:42 EST" name="validateText" finished-at="2020-11-19T12:17:42 EST" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateText -->
        <test-method signature="unValidedText_Capture_A_Screenshot()[pri:3, instance:com.vndly.testCases.TC001_Student_RegistrationForm@61d6015a]" started-at="2020-11-19T12:17:42 EST" name="unValidedText_Capture_A_Screenshot" finished-at="2020-11-19T12:17:42 EST" duration-ms="22" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Thanks for submitting the formA] but found [Thanks for submitting the form]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Thanks for submitting the formA] but found [Thanks for submitting the form]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.vndly.testCases.TC001_Student_RegistrationForm.unValidedText_Capture_A_Screenshot(TC001_Student_RegistrationForm.java:74)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unValidedText_Capture_A_Screenshot -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.vndly.testCases.TC001_Student_RegistrationForm@61d6015a]" started-at="2020-11-19T12:17:42 EST" name="afterClass" finished-at="2020-11-19T12:17:43 EST" duration-ms="1107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.vndly.testCases.TC001_Student_RegistrationForm -->
    </test> <!-- Functional-edge -->
  </suite> <!-- Suite -->
</testng-results>
